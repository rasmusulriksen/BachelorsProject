version: "3.8"
services:
  # APIs
  notification-api:
    build:
      context: ..
      dockerfile: BachelorsProject/NotificationService/NotificationAPI/Dockerfile
    ports:
      - "5258:8080"
      - "5000:5000"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - local_network

  email-template-api:
    build:
      context: ..
      dockerfile: BachelorsProject/NotificationService/EmailTemplateAPI/Dockerfile
    ports:
      - "5298:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - smtp4dev
    networks:
      - local_network

  email-sender-api:
    build:
      context: ..
      dockerfile: BachelorsProject/NotificationService/EmailSenderAPI/Dockerfile
    ports:
      - "5089:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - smtp4dev
    networks:
      - local_network

  message-queue-api:
    build:
      context: ..
      dockerfile: BachelorsProject/NotificationService/MessageQueueAPI/Dockerfile
    ports:
      - "5204:80"
      - "2222:2222"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - DOTNET_USE_POLLING_FILE_WATCHER=true
      - ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS=true
      - DOTNET_RUNNING_IN_CONTAINER=true
    command: -c max_connections=200
    networks:
      - local_network
    security_opt:
      - seccomp:unconfined
    cap_add:
      - SYS_PTRACE

  # Databases
  
  # The database server that contains several databases (one for each tenant). It has a schema for notifications and queues.
  postgres-tenant-service-databases:
    image: postgres:latest
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: tenant-service-databases
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_tenant_service_databases:/var/lib/postgresql/data
    networks:
      - local_network

  # The controlpanel database where tier and tenant information is stored
  postgres-tenant-controlpanel:
    image: postgres:latest
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: tenant-controlpanel
    ports:
      - "5438:5432"
    volumes:
      - postgres_data_tenant_controlpanel:/var/lib/postgresql/data
    networks:
      - local_network
      

  # Utilities
  smtp4dev:
    image: rnwood/smtp4dev:v3
    ports:
      - "3000:80"
      - "2526:25"
    volumes:
      - smtp4dev_data:/smtp4dev
    environment:
      - ServerOptions__HostName=smtp4dev
    networks:
      - local_network

  # Authentication
  keycloak:
    image: quay.io/keycloak/keycloak:26.1.0
    restart: always
    ports:
      - "8082:8082"
      - "8443:8443"
    environment:
      KC_HTTP_ENABLED: "true"
      KC_PROXY_HEADERS: xforwarded
      KC_HOSTNAME_STRICT: "false"
      KC_HTTP_RELATIVE_PATH: /idp
      KC_HTTP_MAX_QUEUED_REQUESTS: "200"
      KC_HTTP_MANAGEMENT_PORT: "9990"
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_HEALTH_ENABLED: "true"
    command: ["start-dev", "--http-port", "8082", "--https-port", "8443"]
    networks:
      - local_network
    volumes:
      - keycloak_data:/opt/keycloak/data

  

# Networks
networks:
  local_network:
    driver: bridge

# Volumes
volumes:
  smtp4dev_data:
  postgres_data_tenant_service_databases:
  postgres_data_tenant_controlpanel:
  keycloak_data:
